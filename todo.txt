TODO
----

- likelihoodConstraint should be an argument of NestedSampler.drawWithConstraint() rather than a class variable.

- printToScreen should (everywhere) be replaced with a proper Logger functionality

- Header file inclusion should be kept to a minimum, so that the whole world is not recompiled when one of them changes.

- Avoid accessing the individual elements of Eigen arrays too often in UniformPrior::draw()

- Replace X-means clusterer algorithm with something better

- The XXX.conrvativeResize(Ndimensions, Niterations + 1) statements at the beginning of the nested sampling loop in Multinest.run() are highly inefficient. Fix.
  This also includes the conservativeResize() when adding the live sample to the posterior sample

- Check if logLikelihood in NesteSampler is more efficiently described with a vector<double> than with an ArrayXd.

- Shouldn't the clustering part be really in MutliEllipsoid::drawWithConstraint() rather than in MultiNest.run()?

- In MultiNest.run() and elsewhere, consider replacing 'nestedSample' with 'liveSample'

- Update method docstrings in MultiEllipsoidSampler and NestedSampler (no longer up to date after refactoring)

- Fix the credible interval computation as it sometimes (not always...) generates the error message: 
  Assertion failed: (index >= 0 && index < size()), function operator()
  when executing demoTwo2DGaussians.

- In NestedSampler, the Arrays 'posteriorSample', 'logLikelihoodOfPosteriorSample', 'logWeightOfPosteriorSample' are public which means that they can be altered from outside. Check whether there is a better design possible.

- Consider changing Nobjects to Npoints, since "object" has already a meaning in C++ as an instantiated class.

- Change the output of KmeansClusterer so that it returns sortedIndices, rather than clusterIndices

- Come up with a concise way avoiding the drawing of a reference point in case of uniform priors. Uniform prior will be one of the most used ones, and the drawing of the reference point is in our inner loop, so it matters.

